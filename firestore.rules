rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user has 'admin' or 'editor' role
    function isAuthorized() {
      return request.auth != null && request.auth.token.role in ['admin', 'editor'];
    }

    // Rules for the 'facilities' collection
    match /facilities/{facilityId} {
      // Allow read access to any authenticated user
      allow read: if request.auth != null;

      // Allow create, update, delete only for authorized roles (admin, editor)
      allow write: if isAuthorized();
    }

    // Add rules for other collections here if needed
    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow an authenticated user to read their own document
      allow read: if request.auth != null && request.auth.uid == userId;
      // Allow an authenticated user to create their own document (e.g., on signup)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow an authenticated user to update their own document (e.g., profile changes)
      // Disallow changing the 'role' field unless they are an admin (add admin check later if needed)
      allow update: if request.auth != null && request.auth.uid == userId;
      // Generally disallow deleting user documents from the client-side
      allow delete: if false;
    }
  }
}